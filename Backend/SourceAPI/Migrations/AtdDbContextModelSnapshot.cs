// <auto-generated />
using System;
using AttendanceApi.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AttendanceApi.Migrations
{
    [DbContext(typeof(AtdDbContext))]
    partial class AtdDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AttendanceApi.Domain.Models.ActionRequest", b =>
                {
                    b.Property<long>("ActionRequestId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApplicantPersonnelId");

                    b.Property<long?>("AttendanceSpanId");

                    b.Property<int?>("CorroborantPersonnelId");

                    b.Property<long?>("DayId");

                    b.Property<string>("DescriptionOfApplicant")
                        .HasMaxLength(250);

                    b.Property<string>("DescriptionOfCorroborant")
                        .HasMaxLength(250);

                    b.Property<DateTime>("RegisterDate");

                    b.Property<DateTime>("RequestDate");

                    b.Property<int>("RequestType");

                    b.HasKey("ActionRequestId");

                    b.HasIndex("ApplicantPersonnelId");

                    b.HasIndex("AttendanceSpanId");

                    b.HasIndex("CorroborantPersonnelId");

                    b.HasIndex("DayId");

                    b.ToTable("ActionRequests");
                });

            modelBuilder.Entity("AttendanceApi.Domain.Models.AttendanceSpan", b =>
                {
                    b.Property<long>("AttendanceSpanId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("DayId");

                    b.Property<long?>("EndAttendanceTimeId");

                    b.Property<long?>("StartAttendanceTimeId");

                    b.Property<int>("TimeType");

                    b.HasKey("AttendanceSpanId");

                    b.HasIndex("DayId");

                    b.HasIndex("EndAttendanceTimeId");

                    b.HasIndex("StartAttendanceTimeId");

                    b.ToTable("AttendanceSpans");
                });

            modelBuilder.Entity("AttendanceApi.Domain.Models.AttendanceTime", b =>
                {
                    b.Property<long>("AttendanceTimeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTime");

                    b.Property<int>("PersonnelId");

                    b.Property<int>("TimeType");

                    b.HasKey("AttendanceTimeId");

                    b.HasIndex("PersonnelId");

                    b.ToTable("AttendanceTimes");
                });

            modelBuilder.Entity("AttendanceApi.Domain.Models.Day", b =>
                {
                    b.Property<long>("DayId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<int>("PersonnelId");

                    b.Property<int>("TimeType");

                    b.HasKey("DayId");

                    b.HasIndex("PersonnelId");

                    b.ToTable("Days");
                });

            modelBuilder.Entity("AttendanceApi.Domain.Models.Personnel", b =>
                {
                    b.Property<int>("PersonnelId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("NationalCode")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("PhoneNo")
                        .HasMaxLength(20);

                    b.HasKey("PersonnelId");

                    b.ToTable("Personnels");
                });

            modelBuilder.Entity("AttendanceApi.Domain.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("PersonnelId");

                    b.Property<bool>("UserActived");

                    b.Property<string>("UserName")
                        .HasMaxLength(50);

                    b.Property<int>("UserRole");

                    b.HasKey("UserId");

                    b.HasIndex("PersonnelId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AttendanceApi.Domain.Models.ActionRequest", b =>
                {
                    b.HasOne("AttendanceApi.Domain.Models.Personnel", "Applicant")
                        .WithMany("ApplicantActionRequests")
                        .HasForeignKey("ApplicantPersonnelId");

                    b.HasOne("AttendanceApi.Domain.Models.AttendanceSpan", "AttendanceSpan")
                        .WithMany("ActionRequests")
                        .HasForeignKey("AttendanceSpanId");

                    b.HasOne("AttendanceApi.Domain.Models.Personnel", "Corroborant")
                        .WithMany("CorroborantActionRequests")
                        .HasForeignKey("CorroborantPersonnelId");

                    b.HasOne("AttendanceApi.Domain.Models.Day", "Day")
                        .WithMany("ActionRequests")
                        .HasForeignKey("DayId");
                });

            modelBuilder.Entity("AttendanceApi.Domain.Models.AttendanceSpan", b =>
                {
                    b.HasOne("AttendanceApi.Domain.Models.Day", "Day")
                        .WithMany("AttendanceSpans")
                        .HasForeignKey("DayId");

                    b.HasOne("AttendanceApi.Domain.Models.AttendanceTime", "EndAttendanceTime")
                        .WithMany()
                        .HasForeignKey("EndAttendanceTimeId");

                    b.HasOne("AttendanceApi.Domain.Models.AttendanceTime", "StartAttendanceTime")
                        .WithMany()
                        .HasForeignKey("StartAttendanceTimeId");
                });

            modelBuilder.Entity("AttendanceApi.Domain.Models.AttendanceTime", b =>
                {
                    b.HasOne("AttendanceApi.Domain.Models.Personnel", "Personnel")
                        .WithMany("AttendanceTimes")
                        .HasForeignKey("PersonnelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AttendanceApi.Domain.Models.Day", b =>
                {
                    b.HasOne("AttendanceApi.Domain.Models.Personnel", "Personnel")
                        .WithMany("Days")
                        .HasForeignKey("PersonnelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AttendanceApi.Domain.Models.User", b =>
                {
                    b.HasOne("AttendanceApi.Domain.Models.Personnel", "Personnel")
                        .WithMany("Users")
                        .HasForeignKey("PersonnelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
